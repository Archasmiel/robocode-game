Персонаж. Базове керування

Згадуємо, як працюють компоненти Rigidbody2D та Collider2D. 
Вчимось рухати 2D спрайти в ізометричній проєкції. 
Створюємо систему керування персонажем. 
Створюємо механіку слідування камери за персонажем.

Діти мають знати: 
По яких напрямках може рухатися персонаж в іхометричній грі. 
Навіщо потрібен атрибут [SerializeField]. 
Що таке Sorting Layer. 
Яка різниця між GetAxis() та GetAxisRaw().

Вміти: 
Відображати приватні змінні в інспекторі. 
Налаштовувати Sorting Layer.



1) розрізати картинки персонажа
	sprite_mode=Multiple, pixels_per_unit=64, filter_mode=Point
	Sprite Editor -> Slice -> By cell size -> pixel_size=(64, 64)
2) додати пустий об'єкт на сцену
	назвати Character
	позиція 0,0,0
	додати Rigidbody2D та CapsuleCollider2D
	прибрати гравітацію (gravity_scale=0)
	заморозити по Z (Constraints -> freeze_rotation_Z = true)
3) додати всередину Character першу картинку спрайтшиту Idle
	назвати Render
	позиція - 0,0,0
	у нього замінити Sorting Layer на новий Foreground
	поставити Order In Layer на 0
	!!! всі декоративні тайлмапи (предмети на землі, пальми) 
	робити тільки на ньому і вище за 0 
4) створюємо два скрипти
	PlayerAnimation вішаємо на Render 
	PlayerMovement на Character
5) пишемо лише PlayerMovement, попутно пояснюючи 
	за рух персонажа в ізометрії та колайдери що створили
	також за Input.GetAxis()
	P.S. всі тайлмапи просто накладаються, ми рухаємося
	просто як в 2Д світі, колайдер для всіх шарів один і той самий
6) додаємо скрипт CameraFollow на камеру і пишемо
	зверніть увагу на new Vector3 в програмі, 
	координату по z залишаємо яка й була у камери
7) ставимо в камері в програмі
	target - наш персонаж Character
	швидкість - від 1 до 3


